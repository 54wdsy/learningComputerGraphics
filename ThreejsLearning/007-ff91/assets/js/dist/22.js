module.exports = 'precision mediump float;\n\n#define PI 3.14159265\n#define WAVE_LENGTH 0.125\n#define SIZE_MAX 0.45\n#define TIME_FACTOR 0.4\n\nuniform mat4 modelViewMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\n\nuniform float vpH;\nuniform float time;\nuniform vec2 mousePos;\nuniform float playhead;\n\nvarying float opacity;\nvarying float diagonal;\n\nattribute vec3 position;\n\nfloat normFloat(float n, float minVal, float maxVal){\n\treturn max(0.0, min(1.0, (n-minVal) / (maxVal-minVal)));\n}\n\nvoid main() {\n\tfloat currentTime = time * TIME_FACTOR;\n\n\t// Alternate diagonal direction\n\tdiagonal = mod(position.x + position.y, 2.0);\n\n\t// Add sine waves from origin\n\tfloat distOrigin = distance(position.xy, vec2(-0.5, 0.0));   // FF Logo\n\tfloat sizeOrigin = normFloat(distOrigin, 40.0, 0.0);\n\tsizeOrigin = (sizeOrigin + currentTime) / WAVE_LENGTH;\n\tsizeOrigin = (sin(sizeOrigin) + 1.0) * SIZE_MAX;\n\n\t// Add cos waves from mousePos\n\tfloat distMouse = distance(position.xy, mousePos);\n\tfloat sizeMouse = distMouse / -40.0;\n\tsizeMouse = (sizeMouse + currentTime * 0.67) / WAVE_LENGTH * 0.67;\n\tsizeMouse = (cos(sizeMouse) + 1.0) * SIZE_MAX;\n\n\t// Determine progress based on playhead and distance\n\tfloat progress = normFloat(distOrigin, -30.0, 40.0);\n\tprogress = smoothstep(progress - 0.5, progress, playhead);\n\n\t// Combine both values\n\tfloat size = sizeMouse * sizeOrigin * progress;\n\n\t// Add wave when growing\n\tsize += (sin((progress * PI * 2.0) - (PI / 2.0)) + 1.0) / PI;\n\n\t// Make logo\n\tif(distOrigin + (1.0 - progress) * 5.0 < 1.7){\n\t\tsize = progress;\n\t}\n\n\t// Fade outside of radius\n\tsize *= normFloat(distOrigin, 40.0, 35.0);\n\topacity = size * 1.0;\n\n\tvec4 mvPosition = modelViewMatrix * vec4(position.x, position.y, size * 4.0 - (1.0 - progress) * 50.0, 1.0 );\n\tgl_PointSize = 0.125 * vpH * size / -mvPosition.z;\n\tgl_Position = projectionMatrix * mvPosition;\n}';